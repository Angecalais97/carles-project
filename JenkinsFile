pipeline {
  agent any
  tools {
    maven 'maven'
  }
  environment {
    SONARQUBE_TOKEN = credentials('sonartoken')  // SonarQube token from Jenkins credentials
    DOCKERHUB_CREDENTIALS = credentials('carles-docker-hub')  // Docker Hub credentials from Jenkins credentials
    DOCKERHUB_USERNAME = 's5carles'  // Your Docker Hub username
    IMAGE_NAME = 'carles-project'  // Docker image name
  }
  stages {
    stage ('scm') {
      steps {
        git branch: 'main', url: 'https://github.com/Angecalais97/carles-project'
      }
    }
    stage ('build,test,compile,package') {
      steps {
        sh ''' 
        mvn --version
        mvn clean package
        '''
      }
    }
    stage ('SonarQube Analysis') {
      steps {
        withSonarQubeEnv('let-do-it') {  // SonarQube scanner name in Jenkins configuration
          sh '''
          mvn sonar:sonar \
            -Dsonar.projectKey=carles-project \
            -Dsonar.host.url=https://sonarqube.devopseasylearning.uk \
            -Dsonar.login=$SONARQUBE_TOKEN
          '''
        }
      }
    }
    stage ('Build Docker Image') {
      steps {
        sh ''' 
        docker build -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:v1 .
        '''
      }
    }
    stage ('Push Docker Image to Docker Hub') {
      steps {
        script {
          sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin"
          sh "docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:v1"
        }
      }
    }
    stage ('Run Docker Container') {
      steps {
        sh ''' 
        docker run -d -P ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:v1
        docker ps
        '''
      }
    }
  }
}
